
     	SUBROUTINE interpol_ed0LUT_5nm_v2(LUT,thetas, ozone, taucl,SurfaceAlb, ed)
!
!	This routine interpolates the spectral irradiance for the given
!	values of thetas, ozone, taucl
!
!	INPUT:
!		LUT  	is the look-up-table of Ed generated by SBDART
!		thetas	is the sun zenith angle
!		ozone 	is the ozone in DU
!		taucl   is the cloud optical thickness
!               SurfaceAlb is the surface albedo, which depends upon the
!               presence of sea ice

!	OUTPUT:
!		ed	is the spectral value
!
!
      	parameter (nwl=83, nthetas=19,	nozone=10, ntaucl=8, nalb=7)

        real*4  LUT(nwl, nthetas, nozone, ntaucl, nalb)
        real*4  thetas, ozone, taucl, SurfaceAlb, ed(nwl)
        real*4  ed_tmp4(nwl,2,2,2)
        real*4	ed_tmp3(nwl,2,2), ed_tmp2(nwl,2)
        real*4  xthetas(nthetas), xozone(nozone), xtaucl(ntaucl)
        real*4  xalb(nalb)
        integer ithetas, iozone, itaucl, ialb
        real*4 rthetas, rozone, rtaucl, ralb
        integer i,j,k,l,m
        integer zthetas, zozone, ztaucl, zalb


      	data xthetas /0.0, 5.0, 10.0, 15.0,
     &              20.0, 25.0, 30.0, 35.0,
     &		    40.0, 45.0, 50.0, 55.0,
     &		    60.0, 65.0, 70.0, 75.0,
     &		    80.0, 85.0, 90.0/
      	data xozone /100.0,150.0, 200.0, 250.0, 300.0, 350.0,
     &              400.0, 450.0, 500.0, 550.0/
        data xtaucl /0.0, 1.0, 2.0, 4.0,
     &              8.0, 16.0, 32.0, 64.0/
        data xalb /0.05,0.20,0.35,0.50,0.65,0.80,0.95/

!	If input values overflow the maximum value used to generate the LUT then reset it to its maximum values

        if (thetas.GE.90.) then
            thetas = 89.99
        endif
        if (ozone.GE.550.0) then
            ozone = 549.99
        endif
        if (taucl.GE.64.0) then
            taucl = 63.99
        endif
        if (SurfaceAlb.LE.0.05) then
                SurfaceAlb = 0.051
        endif
        if (SurfaceAlb.GE.0.95) then
                SurfaceAlb = 0.9499
        endif


! 	Get the indices for thetaS
      	do i=1,nthetas-1
           if ((thetas.GE.xthetas(i)).AND.(thetas.LT.xthetas(i+1))) then
            	ithetas=i
           endif
      	enddo
      	if (thetas.lt.xthetas(1)) then
         	ithetas=1
         	rthetas=0.
      	else
            rthetas=(thetas-xthetas(ithetas))/
     &      (xthetas(ithetas+1)-xthetas(ithetas))
      	endif

! 	Get the indices for Ozone
      	do i=1,nozone-1
         if ((ozone.GE.xozone(i)).AND.(ozone.LT.xozone(i+1))) then
            iozone=i
         endif
      	enddo
      	if (ozone.lt.xozone(1)) then
         iozone=1
         rozone=0.
      	else
         rozone=(ozone-xozone(iozone))/(xozone(iozone+1)-xozone(iozone))
      	endif
! 	Get the indices for Cloud Optical Thickness
      	do i=1,ntaucl-1
         if ((taucl.GE.xtaucl(i)).AND.(taucl.LT.xtaucl(i+1))) then
            itaucl=i
         endif
      	enddo
      	if (taucl.lt.xtaucl(1)) then
         itaucl=1
         rtaucl=0.
      	else
         rtaucl=(taucl-xtaucl(itaucl))/(xtaucl(itaucl+1)-xtaucl(itaucl))
      	endif


!       Get the indices for Albedo
        do i=1,nalb-1
         if ((SurfaceAlb.GE.xalb(i)).AND.(SurfaceAlb.LT.xalb(i+1))) then
            ialb=i
         endif
        enddo
        if (SurfaceAlb.lt.xalb(1)) then
         ialb=1
         ralb=0.
        else
         ralb=(SurfaceAlb-xalb(ialb))/(xalb(ialb+1)-xalb(ialb))
        endif


!       Start interpolation
!       Remove the dimension on Surface Albedo
        do i=1,2
          zthetas=ithetas+(i-1)
          do j=1,2
            zozone=iozone+(j-1)
            do k=1,2
               ztaucl = itaucl+(k-1)
               do l=1,nwl
                  ed_tmp4(l,i,j,k)=(1.-ralb)*LUT(l,zthetas, zozone,ztaucl, ialb) + ralb * LUT(l,zthetas, zozone, ztaucl, ialb+1)
               enddo
            enddo
          enddo
        enddo

!       Remove the dimension on taucl
      	do i=1,2
         	do j=1,2
                do l=1,nwl
               			ed_tmp3(l,i,j)=(1.-rtaucl)
     &                       *ed_tmp4(l,i, j, 1)
     &                +rtaucl*ed_tmp4(l,i, j, 2)
                enddo
         	enddo
      	enddo

!       Remove the dimension on ozone
      	do i=1,2
          do l=1,nwl
                ed_tmp2(l,i)=(1.-rozone)*ed_tmp3(l,i,1)
     &                           +rozone*ed_tmp3(l,i,2)
          enddo
       	enddo

!       Remove the dimention on sunzenith angle
       	do l=1,nwl
          ed(l)=(1.-rthetas)*ed_tmp2(l,1)
     &             +rthetas*ed_tmp2(l,2)
        if (ed(l).gt.10000) then ! data overflow!!!
            ed(l)=0.0
        endif
        enddo

      	return
      	end
